"""
1.	Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()), который
должен принимать данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
Примеры матриц: 3 на 2, 3 на 3, 2 на 4.

31	22
37	43
51	86

3	5	32
2	4	6
-1	64	-8

3	5	8	3
8	3	7	1

Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
Далее реализовать перегрузку метода __add__() для  сложения двух объектов класса Matrix (двух матриц).
Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно. Первый элемент первой строки первой матрицы складываем с
первым элементом первой строки второй матрицы и пр.
"""


class MatrixError(Exception):
    pass


class Matrix:

    def __init__(self, list_of_list):
        self.M = list_of_list

    def __str__(self):
        # Просто соединяем эелементы с помощью табуляции и строки с помощью перехода на новую строку
        return '\n'.join(['\t'.join([str(r) for r in list_c]) for list_c in self.M])

    def __add__(self, other):
        if len(self.M) == len(other.M):
            mass = []
            for m_, o_ in zip(self.M, other.M):
                if len(m_) == len(o_):
                    # Сложение поэлементно
                    mass += [[m + o for m, o in zip(m_, o_)]]
                else:
                    raise MatrixError("Не совпадает размер матриц!")
            return Matrix(mass)
        else:
            raise MatrixError("Не совпадает размер матриц!")


m0 = Matrix([[31, 22], [37, 43], [51, 86]])
m1 = Matrix([[3, 5, 32], [2, 4, 6], [-1, 64, -8]])
m2 = Matrix([[3, 5, 8, 2], [8, 3, 7, 1]])
m3 = Matrix([[2, 0, -3, 3], [-3, 2, -2, 4]])
print(m0)
print()
print(m1)
print()
print(m2)
print()
print(m2 + m3)
