"""
5. Реализовать функцию get_jokes(), возвращающую n шуток, сформированных из двух случайных слов, взятых из трёх списков:
nouns = ["автомобиль", "лес", "огонь", "город", "дом"]
adverbs = ["сегодня", "вчера", "завтра", "позавчера", "ночью"]
adjectives = ["веселый", "яркий", "зеленый", "утопичный", "мягкий"]
        Например:
//>>> get_jokes(2)
["лес завтра зеленый", "город вчера веселый"]
Документировать код функции.
Сможете ли вы добавить еще один аргумент — флаг, разрешающий или запрещающий повторы слов в шутках
(когда каждое слово можно использовать только в одной шутке)? Сможете ли вы сделать аргументы именованными?
"""
import random as rd


def get_jokes(n, not_rep=False):
    """
    Функция формирования шуток
    :param n: Требуемое количество шуток
    :param not_rep: Флаг - без повторений
    :return: Возвращает массив шуток
    """
    nouns = ["автомобиль", "лес", "огонь", "город", "дом"]
    adverbs = ["сегодня", "вчера", "завтра", "позавчера", "ночью"]
    adjectives = ["веселый", "яркий", "зеленый", "утопичный", "мягкий"]
    # Избегать повторений
    if not_rep:
        # Если не должно быть повторений а шуток больше, чем возможных слов
        if n > len(nouns):
            n = len(nouns)
            print(f"Функция может вывести только {n} шуток без повторений!")
        # Рандомно перемешиваем слова в массивах
        nouns, adverbs, adjectives = rd.sample(nouns, n), rd.sample(adverbs, n), rd.sample(adjectives, n)
        # Формируем массив массивов из 3 слов
        words = [[nouns[i], adverbs[i], adjectives[i]] for i in range(n)]
    else:
        # Формируем массив массивов из 3 слов, рандомно выбирая слово из каждого массива
        words = [[rd.choice(nouns), rd.choice(adverbs), rd.choice(adjectives)] for i in range(n)]
    # Собираем внутренние массивы слов в строки, а строки в массив шуток
    jokes = [' '.join(w) for w in words]
    return jokes


print(get_jokes(6, True))
print(get_jokes(n=2))
print(get_jokes(n=3, not_rep=False))
